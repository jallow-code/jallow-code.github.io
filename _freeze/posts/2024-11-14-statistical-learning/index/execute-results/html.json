{
  "hash": "662304a14833e78711556e2f7ffd703a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"An Introduction to Statistical Learning\"\ndescription: \"In this blog post, Iâ€™ll share my solutions to exercises from *An Introduction to Statistical Learning* by Gareth M. James, Daniela Witten, Trevor Hastie, and Robert Tibshirani. Additionally, Iâ€™ll provide a brief summary of each chapter to help contextualize the exercises and key concepts covered in the book.\"\nauthor:\n  - name: Abdoulie Jallow\n    url: https://jallow-code.github.io/\ndate: 14 11 2024\ndate-modified: last-modified\ncategories: [Learn, R] # self-defined categories\ncitation: \n  url: https://jallow-code.github.io/posts/2024-11-14-statistical-learning/ \nimage: stat_image.jpg\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\ntoc-title: Table of Contents\nengine: knitr\n---\n\n\n\n# Statistical Learning\n\n## Summary\n\nThe association between predictors ($X = X_1, X_2,...,X_p$) and a quantitative response (Y) can be expressed as $Y = f(X) + \\epsilon$. Where $f$ is some fixed unknown function, and $\\epsilon$ is a random error term with a zero mean. Statistical learning refers to a large collection of tools for estimating $f$. These tools can be classified either supervised or unsupervised. Supervised learning involves estimating an output based on one or more inputs. In contrast, unsupervised learning involves inputs but no supervising outputs. There are two primary reasons for predicting $f$:\n\n-   *Prediction*: This applies to situations were inputs (X) are readily available, but the output (Y) can not be easily obtained. $Y$ can be estimated using $\\hat{Y} = \\hat{f}(X)$ where $\\hat{f}$ is our estimate for the true function $f$. In this setting, one is not typically concerned with the exact form of $\\hat{f}$ given it yields accurate predictions for $Y$. The accuracy of $\\hat{f}$ depends on two quantities known as *reducible error* and *Irreducible error*. The reducible error can be improved by using an appropriate statistical learning method to estimate $f$. The Irreducible error is the variability associated with the error term ($Var(\\epsilon)$). Since $Y$ also depends on $\\epsilon$, it is impossible to achieve a perfect estimate of $Y$. The irreducible error will always be greater than zero, as it may include unmeasured variables or unmeasurable variations influencing $Y$.\n\n-   *Inference:* In this setting we're interested in the association between $Y$ and $X$ hence the exact form of $\\hat{f}$ is very important. One may be interested in answering the following questions: Which predictors are associated with the response? What is the relationship between the response and each predictor? Can the relationship between Y and each predictor be adequately summarized using a linear equation, or is the relationship more complicated?\n\n$f$ can be estimated using either *parametric* or *non-parametric* methods. parametric methods involve first assuming the shape of $f$ (e.g., linear) and then using training data to fit or train the model. These methods are less flexible but more interpretable. Non-parametric methods do not make assumptions about the shape of $f$, allowing for a wider range of possible forms. However, they tend to be less interpretable. Variables can be characterized as either quantitative or qualitative (also known as categorical). Problems with a quantitative response are often referred to as regression problems, while those involving a qualitative response are often referred to as classification problems. In regression settings the measure for the accuracy of a model is given by the *mean squared error* (MSE) . We choose a statistical learning method that gives the lowest *test MSE*. The *test MSE* depends on *variance* of $\\hat{f}(x_0)$, the squared *bias* of $\\hat{f}(x_0)$, and var($\\epsilon$). To achieve a low *test MSE*, one needs to choose a model that simultaneously results in *low variance* and *low bias*. As a general rule, as we use more flexible methods, the variance will increase and the bias will decrease. The relative rate of change of these two quantities determines whether the test MSE increases or decreases.\n\nIn classification settings, model accuracy is evaluated by the proportion of incorrect predictions made when applying the estimated function $\\hat{f}$ to a set of test observations. This proportion is referred to as the *test error rate*. A good classifier minimizes the test error rate, achieving the highest possible accuracy on unseen data. The *Bayes classifier* is an approach in classification that minimizes the test error rate by assigning each observation to the class with the highest conditional probability, $\\Pr(Y = j | X = x_0)$. The decision boundary separating classes is called the *Bayes decision boundary*. This classifier achieves the lowest possible error rate, known as the *Bayes error rate*, which arises due to overlapping classes in the data. However, because the true conditional probabilities are generally unknown, the Bayes classifier serves as a theoretical benchmark. In practice, methods like *k-Nearest Neighbors (KNN)* estimate these probabilities by considering the closest $K$ training points to a test observation. KNN assigns the class with the majority vote among these neighbors. The flexibility of KNN depends on $K$; small $K$ values result in high variance but low bias, while large $K$ values lead to high bias but low variance. The right balance is important, as overly flexible models overfit the training data, and less flexible ones underfit. The tradeoff is illustrated by the characteristic U-shape of the test error as flexibility increases.\n\n## Exercises\n\n### Conceptual\n\n#### Question 1\n\nFor each of parts (a) through (d), indicate whether we would generally expect the performance of a flexible statistical learning method to be better or worse than an inflexible method. Justify your answer.\n\na.  The sample size $n$ is extremely large, and the number of predictors $p$ is small.\n\n> A flexible method will be better because the model does not need to work hard to find patterns in the data hence reducing the likelihood of overfitting. Additionally, a flexible method in this situation will results in a lower test mean squared error (MSE), as the reduction in bias compensates for the increased variance.\n\nb.  The number of predictors $p$ is extremely large, and the number of observations $n$ is small.\n\n> In this situation an Inflexible method preferable because there is higher chance for the model to pickup patterns that may not exist in the test data.\n\nc.  The relationship between the predictors and response is highly non-linear.\n\n> A flexible method is preferred because an inflexible method will lead to high bias.\n\nd.  The variance of the error terms, i.e. $\\sigma^2 = Var(\\epsilon)$, is extremely high.\n\n> In this case, an Inflexible method will perform better. With a flexible method, it may be difficult to differentiate the true pattern from the noise in the data. Flexible method have a higher variance because they fit more data.\n\n#### Question 2\n\nExplain whether each scenario is a classification or regression problem, and indicate whether we are most interested in inference or prediction. Finally, provide $n$ and $p$.\n\na.  We collect a set of data on the top 500 firms in the US. For each firm we record profit, number of employees, industry and the CEO salary. We are interested in understanding which factors affect CEO salary.\n\n> -   sample size: 500\n> -   predictors: profit, number of employees, and industry (3)\n> -   regression problem because the response is quantitative\n> -   We are most interested in making inference.\n\nb.  We are considering launching a new product and wish to know whether it will be a success or a failure. We collect data on 20 similar products that were previously launched. For each product we have recorded whether it was a success or failure, price charged for the product, marketing budget, competition price, and ten other variables.\n\n> -   sample size: 20\n> -   predictors: 13\n> -   classification problem because the response is qualitative (success or failure)\n> -   We are interested in making predictions.\n\nc.  We are interested in predicting the % change in the USD/Euro exchange rate in relation to the weekly changes in the world stock markets. Hence we collect weekly data for all of 2012. For each week we record the % change in the USD/Euro, the % change in the US market, the % change in the British market, and the % change in the German market.\n\n> -   sample size: 52\n> -   predictors: 3\n> -   regression problem because the response is quantitative\n> -   We are interested in making prediction.\n\n#### Question 3\n\nWe now revisit the bias-variance decomposition.\n\na.  Provide a sketch of typical (squared) bias, variance, training error, test error, and Bayes (or irreducible) error curves, on a single plot, as we go from less flexible statistical learning methods towards more flexible approaches. The x-axis should represent the amount of flexibility in the method, and the y-axis should represent the values for each curve. There should be five curves. Make sure to label each one.\n\nb.  Explain why each of the five curves has the shape displayed in part (a).\n\n> -   Squared Bias: Decreases as model flexibility increases since more flexible methods are better at capturing complex patterns in the data.\n> -   Variance: Increases with greater flexibility, as flexible models are more sensitive to variations in the training data.\n> -   Training Error: Decreases with increasing flexibility because more complex models can closely fit the training data.\n> -   Test Error: Initially decreases with flexibility due to reduced bias but eventually increases as overfitting leads to higher variance.\n> -   Bayes Error: Remains constant, as it is independent of the model's complexity and reflects the inherent noise in the data.\n\n#### Question 4\n\nYou will now think of some real-life applications for statistical learning.\n\na.  Describe three real-life applications in which classification might be useful. Describe the response, as well as the predictors. Is the goal of each application inference or prediction? Explain your answer.\n\n> Email Classification (Spam or Not Spam):\\\n> Variables ($p$): Certain keywords, email structure, sender information\\\n> Aim: Prediction\n>\n> Factors Associated with Winning an Election:\\\n> Variables ($p$): Campaign budget, market trends, poll results, etc.\\\n> Aim: Inference\n>\n> Food Spoilage (Healthy or Not Healthy for Consumption): Variables ($p$): Color, texture, smell, etc.\\\n> Aim: Prediction\n\nb.  Describe three real-life applications in which regression might be useful. Describe the response, as well as the predictors. Is the goal of each application inference or prediction? Explain your answer.\n\n> Analyzing the Effect of Marketing Budget on Sales Response: Total revenue Variables ($p$): Marketing budget allocated to different channels (e.g., social media, TV ads, print media), time of year, and product price. Aim: Inference\n>\n> Predicting Housing Prices Response Variable: Sale price of a house. Predictors: Square footage, number of bedrooms, number of bathrooms, location etc Aim: Prediction\n\nc.  Describe three real-life applications in which cluster analysis might be useful.\n\n> -   Genomic data analysis for example RNA seq.\n> -   finding categories in illnesses, cells, or organisms\n\n#### Question 5\n\nWhat are the advantages and disadvantages of a very flexible (versus a less flexible) approach for regression or classification? Under what circumstances might a more flexible approach be preferred to a less flexible approach? When might a less flexible approach be preferred?\n\n> Inflexible methods are more interpretable and are generally preferred in cases with small $n$ (sample size) and large $p$ (number of predictors). However, they may suffer from high bias when the true underlying function is non-linear. Flexible methods, while capable of capturing non-linear patterns, are prone to overfitting, leading to high variance in error. In situations with a large $n$ and small $p$, flexible methods are preferred.\n\n#### Question 6\n\nDescribe the differences between a parametric and a non-parametric statistical learning approach. What are the advantages of a parametric approach to regression or classification (as opposed to a non-parametric approach)? What are its disadvantages?\n\n> Parametric methods are more interpretable because they rely on a predefined model to generate the response. They also tend to perform better than non-parametric methods in high-dimensional settings, as they require estimating fewer parameters. However, a key disadvantage is that the model may not accurately reflect reality. If the assumed model is far from the true underlying relationship, the resulting estimates can be poor.\n>\n> In contrast, non-parametric methods are highly flexible and can adapt to a wide range of underlying patterns. However, this flexibility comes at a cost: they require a larger number of observations to produce accurate estimates, as they do not rely on a small set of parameters and are more prone to overfitting when data is limited\n\n#### Question 7\n\nThe table below provides a training data set containing six observations, three predictors, and one qualitative response variable.\n\n| Obs. | $X_1$ | $X_2$ | $X_3$ | $Y$   |\n|------|-------|-------|-------|-------|\n| 1    | 0     | 3     | 0     | Red   |\n| 2    | 2     | 0     | 0     | Red   |\n| 3    | 0     | 1     | 3     | Red   |\n| 4    | 0     | 1     | 2     | Green |\n| 5    | -1    | 0     | 1     | Green |\n| 6    | 1     | 1     | 1     | Red   |\n\nSuppose we wish to use this data set to make a prediction for $Y$ when $X_1 = X_2 = X_3 = 0$ using $K$-nearest neighbors.\n\na.  Compute the Euclidean distance between each observation and the test point, $X_1 = X_2 = X_3 = 0$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the data\ndata <- data.frame(\n  Obs = 1:6,\n  X1 = c(0, 2, 0, 0, -1, 1),\n  X2 = c(3, 0, 1, 1, 0, 1),\n  X3 = c(0, 0, 3, 2, 1, 1),\n  Y = c(\"Red\", \"Red\", \"Red\", \"Green\", \"Green\", \"Red\")\n)\n\n# Test point\ntest_point <- c(0, 0, 0)\n\n# Compute Euclidean distances\ndata$Distance <- sqrt((data$X1 - test_point[1])^2 + \n                      (data$X2 - test_point[2])^2 + \n                      (data$X3 - test_point[3])^2)\n\n#Sort data by distance\nsorted_data <- data[order(data$Distance), ]\n\n# Display distances\nprint(sorted_data[, c(\"Obs\", \"Distance\", \"Y\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Obs Distance     Y\n5   5 1.414214 Green\n6   6 1.732051   Red\n2   2 2.000000   Red\n4   4 2.236068 Green\n1   1 3.000000   Red\n3   3 3.162278   Red\n```\n\n\n:::\n:::\n\n\n\nb.  What is our prediction with $K = 1$? Why?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prediction for K = 1\nk1_prediction <- sorted_data$Y[1]\ncat(\"Prediction for K = 1:\", k1_prediction, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPrediction for K = 1: Green \n```\n\n\n:::\n:::\n\n\n\nGreen have the smallest distance (obs. 5)\n\nc.  What is our prediction with $K = 3$? Why?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prediction for K = 3\nk3_neighbors <- sorted_data$Y[1:3]\nk3_prediction <- names(which.max(table(k3_neighbors))) # table() returns counts \ncat(\"Prediction for K = 3:\", k3_prediction, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPrediction for K = 3: Red \n```\n\n\n:::\n:::\n\n\n\nd.  If the Bayes decision boundary in this problem is highly non-linear, then would we expect the best value for $K$ to be large or small? Why?\n\n> If the Bayes decision boundary is highly non-linear, a smaller $k$ is better. This is because smaller $k$ will capture the non-linear patterns in data. A large $k$ may lead to underfiting since the true boundary is highly non-linear.\n\n### Applied\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(GGally) # ggpairs function\nlibrary(ISLR2) # Boston data set\n```\n:::\n\n\n\n#### Question 8\n\nThis exercise relates to the `College` data set, which can be found in the file `College.csv`. It contains a number of variables for 777 different universities and colleges in the US. The variables are\n\n-   `Private` : Public/private indicator\n-   `Apps` : Number of applications received\n-   `Accept` : Number of applicants accepted\n-   `Enroll` : Number of new students enrolled\n-   `Top10perc` : New students from top 10% of high school class\n-   `Top25perc` : New students from top 25% of high school class\n-   `F.Undergrad` : Number of full-time undergraduates\n-   `P.Undergrad` : Number of part-time undergraduates\n-   `Outstate` : Out-of-state tuition\n-   `Room.Board` : Room and board costs\n-   `Books` : Estimated book costs\n-   `Personal` : Estimated personal spending\n-   `PhD` : Percent of faculty with Ph.D.'s\n-   `Terminal` : Percent of faculty with terminal degree\n-   `S.F.Ratio` : Student/faculty ratio\n-   `perc.alumni` : Percent of alumni who donate\n-   `Expend` : Instructional expenditure per student\n-   `Grad.Rate` : Graduation rate\n\nBefore reading the data into `R`, it can be viewed in Excel or a text editor.\n\na.  Use the `read.csv()` function to read the data into `R`. Call the loaded data `college`. Make sure that you have the directory set to the correct location for the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege <- read.csv(\"College.csv\")\n```\n:::\n\n\n\nb.  Look at the data using the `View()` function. You should notice that the first column is just the name of each university. We don't really want `R` to treat this as data. However, it may be handy to have these names for later. Try the following commands:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrownames(college) <- college[, 1]\nView(college)\n```\n:::\n\n\n\nYou should see that there is now a `row.names` column with the name of each university recorded. This means that R has given each row a name corresponding to the appropriate university. `R` will not try to perform calculations on the row names. However, we still need to eliminate the first column in the data where the names are stored. Try\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege <- college [, -1]\nView(college)\n```\n:::\n\n\n\nNow you should see that the first data column is `Private`. Note that another column labeled `row.names` now appears before the `Private` column. However, this is not a data column but rather the name that R is giving to each row.\n\nc.  \n\ni.    Use the `summary()` function to produce a numerical summary of the variables in the data set.\n\n<!-- -->\n\nii. Use the `pairs()` function to produce a scatterplot matrix of the first ten columns or variables of the data. Recall that you can reference the first ten columns of a matrix A using `A[,1:10]`.\n\niii. Use the `plot()` function to produce side-by-side boxplots of `Outstate` versus `Private`.\n\niv. Create a new qualitative variable, called `Elite`, by *binning* the `Top10perc` variable. We are going to divide universities into two groups based on whether or not the proportion of students coming from the top 10% of their high school classes exceeds 50%.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nElite <- rep(\"No\", nrow(college))\nElite[college$Top10perc > 50] <- \"Yes\"\nElite <- as.factor(Elite)\ncollege <- data.frame(college, Elite)\n```\n:::\n\n\n\nUse the `summary()` function to see how many elite universities there are. Now use the `plot()` function to produce side-by-side boxplots of `Outstate` versus `Elite`.\n\nv.  Use the `hist()` function to produce some histograms with differing numbers of bins for a few of the quantitative variables. You may find the command `par(mfrow=c(2,2))` useful: it will divide the print window into four regions so that four plots can be made simultaneously. Modifying the arguments to this function will divide the screen in other ways.\n\n<!-- -->\n\nvi. Continue exploring the data, and provide a brief summary of what you discover.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege$Private <- college$Private == \"Yes\"\npairs(college[, 1:10], cex = 0.2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(college$Outstate ~ factor(college$Private), xlab = \"Private\", ylab = \"Outstate\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncollege$Elite <- factor(ifelse(college$Top10perc > 50, \"Yes\", \"No\"))\nsummary(college$Elite)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n No Yes \n699  78 \n```\n\n\n:::\n\n```{.r .cell-code}\nplot(college$Outstate ~ college$Elite, xlab = \"Elite\", ylab = \"Outstate\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n```{.r .cell-code}\npar(mfrow = c(2,2))\nfor (n in c(10, 20, 30, 40)) {\n  hist(college$Enroll, breaks = n, main = paste(\"n =\", n), xlab = \"Enroll\")\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n:::\n\n\n\n\n\n#### Question 9\n\nThis exercise involves the Auto data set studied in the lab. Make sure that the missing values have been removed from the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.table(\"Auto.data\", header = TRUE, na.strings = \"?\")\ndata <- na.omit(data)\n```\n:::\n\n\n\na.  Which of the predictors are quantitative, and which are qualitative?\n\n> Quantitative: mpg,cylinders,displacement,horsepower, weight, acceleration, year. Qualitative: name, origin.\n\nb.  What is the range of each quantitative predictor? You can answer this using the `range()` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(data[ ,1:7], range)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      mpg cylinders displacement horsepower weight acceleration year\n[1,]  9.0         3           68         46   1613          8.0   70\n[2,] 46.6         8          455        230   5140         24.8   82\n```\n\n\n:::\n:::\n\n\n\nc.  What is the mean and standard deviation of each quantitative predictor?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[, 1:7] |>\n  pivot_longer(everything()) |>\n  group_by(name) |>\n  summarise(\n    Mean = mean(value),\n    SD = sd(value)\n  ) |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|name         |        Mean|         SD|\n|:------------|-----------:|----------:|\n|acceleration |   15.541327|   2.758864|\n|cylinders    |    5.471939|   1.705783|\n|displacement |  194.411990| 104.644004|\n|horsepower   |  104.469388|  38.491160|\n|mpg          |   23.445918|   7.805008|\n|weight       | 2977.584184| 849.402560|\n|year         |   75.979592|   3.683737|\n\n\n:::\n:::\n\n\n\nd.  Now remove the 10th through 85th observations. What is the range, mean, and standard deviation of each predictor in the subset of the data that remains?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[-(10:85), 1:7] |>\n  pivot_longer(everything()) |>\n  group_by(name) |>\n  summarise(\n    Range = diff(range(value)),\n    Mean = mean(value),\n    SD = sd(value)\n  ) |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|name         |  Range|        Mean|         SD|\n|:------------|------:|-----------:|----------:|\n|acceleration |   16.3|   15.726899|   2.693721|\n|cylinders    |    5.0|    5.373418|   1.654179|\n|displacement |  387.0|  187.240506|  99.678367|\n|horsepower   |  184.0|  100.721519|  35.708853|\n|mpg          |   35.6|   24.404430|   7.867283|\n|weight       | 3348.0| 2935.971519| 811.300208|\n|year         |   12.0|   77.145570|   3.106217|\n\n\n:::\n:::\n\n\n\ne.  Using the full data set, investigate the predictors graphically, using scatterplots or other tools of your choice. Create some plots highlighting the relationships among the predictors. Comment on your findings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(data[, 1:7])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n> Yes, there are both positive and negative correlation between the variables.\n\n\nf. Suppose that we wish to predict gas mileage (`mpg`) on the basis of the other variables. Do your plots suggest that any of the other variables might be useful in predicting `mpg`? Justify your answer.\n\n> Yes, since other variables are correlated. However, horsepower, weight and displacement are highly related.\n\n#### Question 10\n\nThis exercise involves the `Boston` housing data set.\n\na. To begin, load in the `Boston` data set. The `Boston` data set is part of the `ISLR2` library in R.\n\nNow the data set is contained in the object `Boston`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(Boston)\n```\n:::\n\n\n\nRead about the data set:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?Boston\n```\n:::\n\n\n\nHow many rows are in this data set? How many columns? What do the rows and columns represent?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(Boston)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 506  13\n```\n\n\n:::\n:::\n\n\n\nb.  Make some pairwise scatterplots of the predictors (columns) in this data set. Describe your findings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(Boston[, 1:6])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n> There are no significant correlations associated with capita crime\n\nc.  Are any of the predictors associated with per capita crime rate? If so, explain the relationship.\n\n> Yes, there is mild positive correlation with `rad` and `tax`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_boston <- cor(Boston)\ncor_col <- hcl.colors(33, \"Purple-Green\")\np <- heatmap(cor_boston, col = cor_col, zlim = c(-1, 1), symm = TRUE, margins = c(8, 8), Rowv = NA)\nlegend(\"right\", c(1, rep(\"\", 15), 0, rep(\"\", 15), -1), fill = rev(cor_col), \n  bty = \"n\", border = \"transparent\", y.intersp = 0.5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\nd.  Do any of the census tracts of Boston appear to have particularly high crime rates? Tax rates? Pupil-teacher ratios? Comment on the range of each predictor.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# top 5% of crime,tax,and pupil-teacher ratios\ncat(\"High crime:\", sum(Boston$crim > quantile(Boston$crim, 0.95)), \"\\n\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nHigh crime: 26 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"High tax:\", sum(Boston$tax > quantile(Boston$tax, 0.95)), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nHigh tax: 5 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Pupil-teacher ratio:\", sum(Boston$ptratio > quantile(Boston$ptratio, 0.95)),\"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPupil-teacher ratio: 18 \n```\n\n\n:::\n:::\n\n\n\ne.  How many of the census tracts in this data set bound the Charles river?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(Boston$chas==1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 35\n```\n\n\n:::\n:::\n\n\n\nf.  What is the median pupil-teacher ratio among the towns in this data set?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian_ptratio <- median(Boston$ptratio)\ncat(\"Median pupil-teacher ratio:\", median_ptratio, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMedian pupil-teacher ratio: 19.05 \n```\n\n\n:::\n:::\n\n\n\ng.  Which census tract of Boston has lowest median value of owner-occupied homes? What are the values of the other predictors for that census tract, and how do those values compare to the overall ranges for those predictors? Comment on your findings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# whichsuburbs that have the lowest median property values.\nwhich(Boston$medv == min(Boston$medv))\n\n# Values of other predictors for suburb 406\nBoston[406,]\n\nrange(Boston$crim)\n```\n:::\n\n\n\n> There are two suburbs that have the lowest median property values. crime is negatively correlated with median property value.\n\nh.  In this data set, how many of the census tract average more than seven rooms per dwelling? More than eight rooms per dwelling? Comment on the census tracts that average more than eight rooms per dwelling.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"More than 7 rooms:\",sum(Boston$rm > 7),\"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMore than 7 rooms: 64 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"More than 8 rooms:\", sum(Boston$rm > 8), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMore than 8 rooms: 13 \n```\n\n\n:::\n:::\n\n\n\nMaking summaries:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntracts_more_than_8 <- Boston[Boston$rm > 8, ]\n# Reshape data to long format using pivot_longer()\ndata_long <- tracts_more_than_8 |>\n  pivot_longer(cols = -rm, names_to = \"Predictor\", values_to = \"Value\")\n\n# Create boxplots with facet_wrap\nggplot(data_long, aes(x = Predictor, y = Value, fill = Predictor)) +\n  geom_boxplot(outlier.color = \"red\", outlier.size = 1.5) +\n  facet_wrap(~ Predictor, scales = \"free\", ncol = 4) +  # Each plot gets its own scale\n  theme_minimal() +\n  labs(title = \"Boxplots for Predictors with More Than 8 Rooms\",\n       x = \"Predictors\",\n       y = \"Values\") +\n  theme(axis.text.x = element_blank(),  # Remove x-axis text (not meaningful here)\n        axis.ticks.x = element_blank(),\n        strip.text = element_text(size = 10, face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n# Linear Regression\n\n## Exercises\n\n### Conceptual\n\n### Applied\n\n# Classification\n\n## Exercises\n\n### Conceptual\n\n### Applied\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}